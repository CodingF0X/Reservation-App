services:
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - .env
      - ./apps/auth/.env
    ports:
      - '3001:3001'

  property:
    build:
      context: .
      dockerfile: ./apps/property-category/Dockerfile
      target: development
    command: npm run start:dev property-category
    env_file:
      - .env
      - ./apps/property-category/.env
    ports:
      - '3006:3006'

  reservations:
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    command: npm run start:dev reservations
    env_file:
      - .env
      - ./apps/reservations/.env
    ports:
      - '3002:3002'

  payments:
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    command: npm run start:dev payments
    env_file:
      - .env
      - ./apps/payments/.env
    ports:
      - '3003:3003'

  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: npm run start:dev notifications
    env_file:
      - .env
      - ./apps/notifications/.env
    ports:
      - '3004:3004'

  # GRAFANA TOOLS
  loki:
    image: grafana/loki
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml

  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - auth
      - reservations
      - payments
      - notifications
      - property

  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      # point Grafana at our Prometheus container by its Docker network alias
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - loki
      - prometheus
  mongo:
    image: mongo
